<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.canal.mapper.PetMapper" >
  <resultMap id="BaseResultMap" type="com.canal.po.Pet" >
    <id column="pet_id" property="petId" jdbcType="INTEGER" />
    <result column="hp" property="hp" jdbcType="TINYINT" />
    <result column="attack" property="attack" jdbcType="TINYINT" />
    <result column="defence" property="defence" jdbcType="TINYINT" />
    <result column="special_attack" property="specialAttack" jdbcType="TINYINT" />
    <result column="special_defence" property="specialDefence" jdbcType="TINYINT" />
    <result column="speed" property="speed" jdbcType="TINYINT" />
    <result column="total" property="total" jdbcType="SMALLINT" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="image" property="image" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pet_id, hp, attack, defence, special_attack, special_defence, speed, total, user_id, 
    image
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.canal.po.PetExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Pet
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from Pet
    where pet_id = #{petId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from Pet
    where pet_id = #{petId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.canal.po.PetExample" >
    delete from Pet
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.canal.po.Pet" >
    insert into Pet (pet_id, hp, attack, 
      defence, special_attack, special_defence, 
      speed, total, user_id, 
      image)
    values (#{petId,jdbcType=INTEGER}, #{hp,jdbcType=TINYINT}, #{attack,jdbcType=TINYINT}, 
      #{defence,jdbcType=TINYINT}, #{specialAttack,jdbcType=TINYINT}, #{specialDefence,jdbcType=TINYINT}, 
      #{speed,jdbcType=TINYINT}, #{total,jdbcType=SMALLINT}, #{userId,jdbcType=INTEGER}, 
      #{image,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.canal.po.Pet" >
    insert into Pet
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="petId != null" >
        pet_id,
      </if>
      <if test="hp != null" >
        hp,
      </if>
      <if test="attack != null" >
        attack,
      </if>
      <if test="defence != null" >
        defence,
      </if>
      <if test="specialAttack != null" >
        special_attack,
      </if>
      <if test="specialDefence != null" >
        special_defence,
      </if>
      <if test="speed != null" >
        speed,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="image != null" >
        image,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="petId != null" >
        #{petId,jdbcType=INTEGER},
      </if>
      <if test="hp != null" >
        #{hp,jdbcType=TINYINT},
      </if>
      <if test="attack != null" >
        #{attack,jdbcType=TINYINT},
      </if>
      <if test="defence != null" >
        #{defence,jdbcType=TINYINT},
      </if>
      <if test="specialAttack != null" >
        #{specialAttack,jdbcType=TINYINT},
      </if>
      <if test="specialDefence != null" >
        #{specialDefence,jdbcType=TINYINT},
      </if>
      <if test="speed != null" >
        #{speed,jdbcType=TINYINT},
      </if>
      <if test="total != null" >
        #{total,jdbcType=SMALLINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="image != null" >
        #{image,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.canal.po.PetExample" resultType="java.lang.Integer" >
    select count(*) from Pet
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update Pet
    <set >
      <if test="record.petId != null" >
        pet_id = #{record.petId,jdbcType=INTEGER},
      </if>
      <if test="record.hp != null" >
        hp = #{record.hp,jdbcType=TINYINT},
      </if>
      <if test="record.attack != null" >
        attack = #{record.attack,jdbcType=TINYINT},
      </if>
      <if test="record.defence != null" >
        defence = #{record.defence,jdbcType=TINYINT},
      </if>
      <if test="record.specialAttack != null" >
        special_attack = #{record.specialAttack,jdbcType=TINYINT},
      </if>
      <if test="record.specialDefence != null" >
        special_defence = #{record.specialDefence,jdbcType=TINYINT},
      </if>
      <if test="record.speed != null" >
        speed = #{record.speed,jdbcType=TINYINT},
      </if>
      <if test="record.total != null" >
        total = #{record.total,jdbcType=SMALLINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.image != null" >
        image = #{record.image,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update Pet
    set pet_id = #{record.petId,jdbcType=INTEGER},
      hp = #{record.hp,jdbcType=TINYINT},
      attack = #{record.attack,jdbcType=TINYINT},
      defence = #{record.defence,jdbcType=TINYINT},
      special_attack = #{record.specialAttack,jdbcType=TINYINT},
      special_defence = #{record.specialDefence,jdbcType=TINYINT},
      speed = #{record.speed,jdbcType=TINYINT},
      total = #{record.total,jdbcType=SMALLINT},
      user_id = #{record.userId,jdbcType=INTEGER},
      image = #{record.image,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.canal.po.Pet" >
    update Pet
    <set >
      <if test="hp != null" >
        hp = #{hp,jdbcType=TINYINT},
      </if>
      <if test="attack != null" >
        attack = #{attack,jdbcType=TINYINT},
      </if>
      <if test="defence != null" >
        defence = #{defence,jdbcType=TINYINT},
      </if>
      <if test="specialAttack != null" >
        special_attack = #{specialAttack,jdbcType=TINYINT},
      </if>
      <if test="specialDefence != null" >
        special_defence = #{specialDefence,jdbcType=TINYINT},
      </if>
      <if test="speed != null" >
        speed = #{speed,jdbcType=TINYINT},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=SMALLINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="image != null" >
        image = #{image,jdbcType=VARCHAR},
      </if>
    </set>
    where pet_id = #{petId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.canal.po.Pet" >
    update Pet
    set hp = #{hp,jdbcType=TINYINT},
      attack = #{attack,jdbcType=TINYINT},
      defence = #{defence,jdbcType=TINYINT},
      special_attack = #{specialAttack,jdbcType=TINYINT},
      special_defence = #{specialDefence,jdbcType=TINYINT},
      speed = #{speed,jdbcType=TINYINT},
      total = #{total,jdbcType=SMALLINT},
      user_id = #{userId,jdbcType=INTEGER},
      image = #{image,jdbcType=VARCHAR}
    where pet_id = #{petId,jdbcType=INTEGER}
  </update>
</mapper>